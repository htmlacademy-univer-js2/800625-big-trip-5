{"version":3,"file":"bundle.3aa9713004861e522706.js","mappings":"mBAAe,MAAMA,EACjBC,WAAAA,GACEC,KAAKC,QAAUD,KAAKE,gBACtB,CAEAA,cAAAA,GACE,MAAMC,EAAMC,SAASC,cAAc,OAcnC,OAbAF,EAAIG,UAAUC,IAAI,WAClBJ,EAAIK,UAAY,geAYTL,CACT,CAEAM,WAAAA,GACE,OAAOT,KAAKC,OACd,ECzBW,MAAMS,EACjBX,WAAAA,GACEC,KAAKC,QAAUD,KAAKK,eACtB,CAEAA,aAAAA,GACE,MAAMM,EAAOP,SAASC,cAAc,QAQpC,OAPAM,EAAKL,UAAUC,IAAI,aACnBI,EAAKH,UAAY,sOAMVG,CACT,CAEAF,WAAAA,GACE,OAAOT,KAAKC,OACd,ECnBW,MAAMW,EACjBb,WAAAA,GACEC,KAAKC,QAAUD,KAAKK,eACtB,CAEAA,aAAAA,GACE,MAAMF,EAAMC,SAASC,cAAc,OAMnC,OALAF,EAAIG,UAAUC,IAAI,eAClBJ,EAAIK,UAAY,iGAITL,CACT,CAEAM,WAAAA,GACE,OAAOT,KAAKC,OACd,ECbW,MAAMY,EACnBd,WAAAA,CAAYe,EAAkBC,GAC5Bf,KAAKc,iBAAmBA,EACxBd,KAAKe,gBAAkBA,CACzB,CAEAC,IAAAA,GAEE,MAAMC,EAAc,IAAInB,EACxBE,KAAKc,iBAAiBI,YAAYD,EAAYhB,SAG9C,MAAMkB,EAAe,IAAIT,EACzBV,KAAKe,gBAAgBG,YAAYC,EAAalB,SAG9C,IAAK,IAAImB,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMC,EAAiB,IAAIT,EAC3BZ,KAAKe,gBAAgBG,YAAYG,EAAepB,QAClD,CACF,ECtBFG,SAASkB,iBAAiB,oBAAoB,KAE5C,MAAMR,EAAmBV,SAASmB,cAAc,2BAE1CR,EAAkBX,SAASmB,cAAc,gBAG/CC,QAAQC,IAAI,qBAAsBX,GAClCU,QAAQC,IAAI,oBAAqBV,GAG7BD,GAAoBC,EACA,IAAIF,EAAcC,EAAkBC,GAC5CC,OAEdQ,QAAQE,MAAM,2CAChB,G","sources":["webpack://big-trip/./src/view/filters-view.js","webpack://big-trip/./src/view/edit-form-view.js","webpack://big-trip/./src/view/route-point-view.js","webpack://big-trip/./src/presenter/main-presenter.js","webpack://big-trip/./src/main.js"],"sourcesContent":["export default class FiltersView {\n    constructor() {\n      this.element = this._createElement();\n    }\n    \n    _createElement() {\n      const div = document.createElement('div');\n      div.classList.add('filters');\n      div.innerHTML = `\n        <!-- Здесь может быть шаблон фильтров -->\n        <h2>Фильтры</h2>\n        <form>\n          <input type=\"radio\" name=\"filter\" id=\"filter-all\" checked>\n          <label for=\"filter-all\">Все</label>\n          <input type=\"radio\" name=\"filter\" id=\"filter-future\">\n          <label for=\"filter-future\">Будущие</label>\n          <input type=\"radio\" name=\"filter\" id=\"filter-past\">\n          <label for=\"filter-past\">Прошедшие</label>\n        </form>\n      `;\n      return div;\n    }\n    \n    getTemplate() {\n      return this.element;\n    }\n  }","export default class EditFormView {\n    constructor() {\n      this.element = this.createElement();\n    }\n  \n    createElement() {\n      const form = document.createElement('form');\n      form.classList.add('edit-form');\n      form.innerHTML = `\n        <!-- Пример разметки формы редактирования -->\n        <h2>Редактировать точку маршрута</h2>\n        <input type=\"text\" placeholder=\"Измените название\">\n        <button type=\"submit\">Сохранить</button>\n      `;\n      return form;\n    }\n  \n    getTemplate() {\n      return this.element;\n    }\n  }","export default class RoutePointView {\n    constructor() {\n      this.element = this.createElement();\n    }\n  \n    createElement() {\n      const div = document.createElement('div');\n      div.classList.add('route-point');\n      div.innerHTML = `\n        <!-- Пример разметки точки маршрута -->\n        <p>Точка маршрута</p>\n      `;\n      return div;\n    }\n  \n    getTemplate() {\n      return this.element;\n    }\n  }","import FiltersView from '../view/filters-view.js';\nimport EditFormView from '../view/edit-form-view.js';\nimport RoutePointView from '../view/route-point-view.js';\n\nexport default class MainPresenter {\n  constructor(filtersContainer, eventsContainer) {\n    this.filtersContainer = filtersContainer;  // .trip-controls__filters\n    this.eventsContainer = eventsContainer;    // .trip-events\n  }\n\n  init() {\n    // 1. Создаём экземпляр класса FiltersView и добавляем в filtersContainer\n    const filtersView = new FiltersView();\n    this.filtersContainer.appendChild(filtersView.element);\n\n    // 2. Форма редактирования (первая в списке)\n    const editFormView = new EditFormView();\n    this.eventsContainer.appendChild(editFormView.element);\n\n    // 3. Три точки маршрута\n    for (let i = 0; i < 3; i++) {\n      const routePointView = new RoutePointView();\n      this.eventsContainer.appendChild(routePointView.element);\n    }\n  }\n}","import MainPresenter from './presenter/main-presenter.js';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // Находим контейнер для фильтров по классу, как указано в index.html\n  const filtersContainer = document.querySelector('.trip-controls__filters');\n  // Находим контейнер для событий (точек маршрута, форм и т.д.)\n  const eventsContainer = document.querySelector('.trip-events');\n\n  // Выводим в консоль для проверки, что контейнеры найдены\n  console.log('Filters Container:', filtersContainer);\n  console.log('Events Container:', eventsContainer);\n\n  // Если контейнеры найдены, инициализируем презентер\n  if (filtersContainer && eventsContainer) {\n    const mainPresenter = new MainPresenter(filtersContainer, eventsContainer);\n    mainPresenter.init();\n  } else {\n    console.error('Не найдены необходимые контейнеры в DOM.');\n  }\n});"],"names":["FiltersView","constructor","this","element","_createElement","div","document","createElement","classList","add","innerHTML","getTemplate","EditFormView","form","RoutePointView","MainPresenter","filtersContainer","eventsContainer","init","filtersView","appendChild","editFormView","i","routePointView","addEventListener","querySelector","console","log","error"],"sourceRoot":""}